#!/usr/bin/env bash
set -e

resolve_link() {
  $(type -p greadlink readlink | head -1) "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

libexec_path="$(abs_dirname "$0")"
export _MATLABD_ROOT="$(abs_dirname "$libexec_path")"
: ${MATLABD_PIPE:="$TMP/matlabd.pipe"}
: ${MATLABD_TAILPIDFILE:="$TMP/matlabd-tail.pid"}
: ${MATLABD_OUT:="/dev/null"}
: ${MATLABD_ERR:="/dev/null"}
: ${MATLABD_CMDLOG:="/dev/null"}
if ! [ -z ${MATLABD_DEBUG+x} ]; then
    echo "MATLABD_PIPE = $MATLABD_PIPE"
    echo "MATLABD_TAILPIDFILE = $MATLABD_TAILPIDFILE"
    echo "MATLABD_OUT = $MATLABD_OUT"
    echo "MATLABD_ERR = $MATLABD_ERR"
    echo "MATLABD_CMDLOG = $MATLABD_CMDLOG"
fi
export PATH="${libexec_path}:$PATH"

command="$1"
case "$command" in
"" | "-h" | "--help" )
  exec matlabd-help
  ;;
* )
  command_path="$(command -v "matlabd-$command" || true)"
  if [ ! -x "$command_path" ]; then
    echo "matlabd: no such command \`$command'" >&2
    exit 1
  fi

  shift
  exec "$command_path" "$@"
  ;;
esac
