#!/usr/bin/env bash
set -e

print_summaries() {
  local commands=()
  local summaries=()
  local longest_command=0
  local command

  for command in $(matlabd-commands); do
    local file="$(command_path "$command")"
    if [ ! -h "$file" ]; then
      local summary="$(summary "$file")"
      if [ -n "$summary" ]; then
        commands["${#commands[@]}"]="$command"
        summaries["${#summaries[@]}"]="$summary"

        if [ "${#command}" -gt "$longest_command" ]; then
          longest_command="${#command}"
        fi
      fi
    fi
  done

  local index
  local columns="$(tput cols)"
  local summary_length=$(( $columns - $longest_command - 5 ))

  for (( index=0; index < ${#commands[@]}; index++ )); do
    printf "   %-${longest_command}s  %s\n" "${commands[$index]}" \
      "$(truncate "$summary_length" "${summaries[$index]}")"
  done
}

print_help() {
  local file="$1"
  local usage="$(usage "$file")"

  if [ -n "$usage" ]; then
    echo "$usage"

    local help="$(help "$file")"
    [ -n "$help" ] && echo && echo "$help"
  else
    echo "Sorry, this command isn't documented yet."
  fi
}

command_path() {
  command -v "matlabd-$command" || command -v "matlabd-sh-$command" || true
}

summary() {
  sed -n "s/^# Summary: \(.*\)/\1/p" "$1"
}

usage() {
  sed -n "s/^# \(Usage: .*\)/\1/p" "$1"
}

help() {
  awk '/^[^#]/{p=0} /^# Help:/{p=1} p' "$1" | sed "s/^# Help: //;s/^# //;s/^#//"
}

truncate() {
  local max_length="$1"
  local string="$2"

  if [ "${#string}" -gt "$max_length" ]; then
    local length=$(( $max_length - 3 ))
    echo "${string:0:$length}..."
  else
    echo "$string"
  fi
}

# Provide matlabd completions
if [ "$1" = "--complete" ]; then
  exec "matlabd-commands"
  exit
fi

command="$1"
case "$command" in
"") echo "Usage: matlabd <command> [<args>]

Some useful matlabd commands are:
$(print_summaries)

The specific Matlab instance is controlled by these environment variables:
MATLABD_PIPE
    The path of the FIFO through which Matlab receives commands.
    default: \"\$TMP/matlabd.pipe\"

MATLABD_TAILPIDFILE
    The path of the file that stores the PID of the tail process that reads
    from the FIFO for Matlab.
    default: \"\$TMP/matlabd-tail.pid\"

MATLABD_OUT
    The path to which Matlabs' STDOUT is rerouted.
    default: \"/dev/null\"

MATLABD_ERR
    The path to which Matlabs' STDERR is rerouted.
    default: \"/dev/null\"

MATLABD_CMDLOG
    The path to the log file of all the commands sent to Matlab
    default: \"/dev/null\"

See 'matlabd help <command>' for information on a specific command."
;;
*)
  file="$(command_path "$command")"

  if [ -n "$file" ]; then
    print_help "$file"
  else
    echo "matlabd: no such command \`$command'" >&2
    exit 1
  fi
esac
